version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: . # Build context is the root of the project
      dockerfile: deployment/Dockerfile.frontend
    ports:
      - "80:80" # Map host port 80 to container port 80
    depends_on:
      - backend # Frontend might need backend for some data
    environment:
      # Pass frontend-specific environment variables if needed
      - VITE_APP_SUPABASE_URL=${SUPABASE_URL}
      - VITE_APP_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}

  # Backend service
  backend:
    build:
      context: . # Build context is the root of the project
      dockerfile: deployment/Dockerfile.backend
    ports:
      - "4000:4000" # Map host port 4000 to container port 4000
    environment:
      # Pass backend-specific environment variables
      - PORT=4000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    # Mount backend source code for live reloads in development (optional, requires Nodemon inside container)
    # volumes:
    #   - ./backend:/app/backend
    #   - /app/backend/node_modules # Exclude node_modules from host mount

  # Nginx Reverse Proxy (if you want to run both frontend and backend on same port/server)
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80" # Map host port 80 to container port 80
  #   volumes:
  #     - ./deployment/nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #   depends_on:
  #     - frontend
  #     - backend

# Define Docker volumes for persistent data (e.g., if you had a local database service)
# volumes:
#   db_data:
